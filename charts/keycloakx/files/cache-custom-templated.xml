<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2019 Red Hat, Inc. and/or its affiliates
  ~ and other contributors as indicated by the @author tags.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<infinispan
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="urn:infinispan:config:11.0 http://www.infinispan.org/schemas/infinispan-config-11.0.xsd"
  xmlns="urn:infinispan:config:11.0">

  {{- if (eq .Values.cache.custom.discovery "KUBE_PING") }}
  <!-- see https://infinispan.org/blog/2019/03/05/enhanced-jgroups-configuration/ -->
  <!-- see http://jgroups.org/manual4/index.html#CommonProps -->
  <jgroups>
    <stack name="custom-tcp" extends="tcp">
      <org.jgroups.protocols.kubernetes.KUBE_PING
        port_range="1"
        namespace={{ .Release.Namespace | quote }}
        labels="keycloak-cluster=default"
        stack.position="MPING"
        stack.combine="REPLACE"/>
      {{- if .Values.cache.custom.secure.enabled }}
      <SYM_ENCRYPT provider="SunJCE"
                   sym_algorithm="AES"
                   keystore_name="${kc.home.dir}/conf/jgroups.jceks"
                   store_password="{{ .Values.cache.custom.secure.keystorePassword }}"
                   alias="jgroups"
                   stack.position="VERIFY_SUSPECT"
                   stack.combine="INSERT_AFTER"/>

      <AUTH auth_class="org.jgroups.auth.MD5Token"
            token_hash="SHA"
            auth_value="{{ .Values.cache.custom.secure.authSecret }}"
            stack.position="pbcast.STABLE"
            stack.combine="INSERT_AFTER"/>
      {{- end }}
    </stack>
  </jgroups>
  {{- end }}

  {{- if (eq .Values.cache.custom.discovery "DNS_PING") }}
  <jgroups>
    <stack name="custom-tcp" extends="kubernetes">
      <dns.DNS_PING dns_query={{ include "keycloak.serviceDnsName" . | quote }}
      num_discovery_runs="3"
      />
      {{- if .Values.cache.custom.secure.enabled }}
      <SYM_ENCRYPT provider="SunJCE"
                   sym_algorithm="AES"
                   keystore_name="${kc.home.dir}/conf/jgroups.jceks"
                   store_password="{{ .Values.cache.custom.secure.keystorePassword }}"
                   alias="jgroups"
                   stack.position="VERIFY_SUSPECT"
                   stack.combine="INSERT_AFTER"/>

      <AUTH auth_class="org.jgroups.auth.MD5Token"
            token_hash="SHA"
            auth_value="{{ .Values.cache.custom.secure.authSecret }}"
            stack.position="pbcast.STABLE"
            stack.combine="INSERT_AFTER"/>
      {{- end }}
    </stack>
  </jgroups>
  {{- end }}

  <cache-container name="keycloak">
    <transport lock-timeout="60000" stack="custom-tcp"/>
    <local-cache name="realms">
      <encoding>
        <key media-type="application/x-java-object"/>
        <value media-type="application/x-java-object"/>
      </encoding>
      <memory max-count="10000"/>
    </local-cache>
    <local-cache name="users">
      <encoding>
        <key media-type="application/x-java-object"/>
        <value media-type="application/x-java-object"/>
      </encoding>
      <memory max-count="10000"/>
    </local-cache>
    <distributed-cache name="sessions" owners="2">
      <expiration lifespan="-1"/>
    </distributed-cache>
    <distributed-cache name="authenticationSessions" owners="2">
      <expiration lifespan="-1"/>
    </distributed-cache>
    <distributed-cache name="offlineSessions" owners="2">
      <expiration lifespan="-1"/>
    </distributed-cache>
    <distributed-cache name="clientSessions" owners="2">
      <expiration lifespan="-1"/>
    </distributed-cache>
    <distributed-cache name="offlineClientSessions" owners="2">
      <expiration lifespan="-1"/>
    </distributed-cache>
    <distributed-cache name="loginFailures" owners="2">
      <expiration lifespan="-1"/>
    </distributed-cache>
    <local-cache name="authorization">
      <encoding>
        <key media-type="application/x-java-object"/>
        <value media-type="application/x-java-object"/>
      </encoding>
      <memory max-count="10000"/>
    </local-cache>
    <replicated-cache name="work">
      <expiration lifespan="-1"/>
    </replicated-cache>
    <local-cache name="keys">
      <encoding>
        <key media-type="application/x-java-object"/>
        <value media-type="application/x-java-object"/>
      </encoding>
      <expiration max-idle="3600000"/>
      <memory max-count="1000"/>
    </local-cache>
    <distributed-cache name="actionTokens" owners="2">
      <encoding>
        <key media-type="application/x-java-object"/>
        <value media-type="application/x-java-object"/>
      </encoding>
      <expiration max-idle="-1" lifespan="-1" interval="300000"/>
      <memory max-count="-1"/>
    </distributed-cache>
  </cache-container>
</infinispan>
