<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2019 Red Hat, Inc. and/or its affiliates
  ~ and other contributors as indicated by the @author tags.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<infinispan
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="urn:infinispan:config:11.0 http://www.infinispan.org/schemas/infinispan-config-11.0.xsd"
  xmlns="urn:infinispan:config:11.0">

  {{ if (eq .Values.cache.custom.discovery "KUBE_PING") }}
  <!-- see https://infinispan.org/blog/2019/03/05/enhanced-jgroups-configuration/ -->
  <!-- see http://jgroups.org/manual4/index.html#CommonProps -->
  <jgroups>
    <stack name="custom-tcp" extends="tcp">
      <org.jgroups.protocols.kubernetes.KUBE_PING
        port_range="1"
        namespace="${kubeping_namespace}"
        labels="${kubeping_label}"
        stack.position="MPING"
        stack.combine="REPLACE"/>
      <MERGE3 min_interval="10000"
              max_interval="30000"
      />
      <FD_SOCK/>
      <!-- Suspect node `timeout` millis after the last heartbeat -->
      <FD_ALL3 timeout="10000"
               interval="2000"
      />
      <VERIFY_SUSPECT timeout="1000"/>
      {{ if .Values.cache.custom.secure.enabled }}
      <!-- Adds a keystore from which nodes obtain secret keys. -->
      <!-- Uses the stack.combine and stack.position attributes to insert SYM_ENCRYPT into the default TCP stack after VERIFY_SUSPECT. -->
      <SYM_ENCRYPT
        provider="SunJCE"
        sym_algorithm="AES"
        keystore_name="{{ .Values.cache.custom.secure.keystorePath }}"
        store_password="{{ .Values.cache.custom.secure.keystorePassword }}"
        alias="jgroups"/>
      {{ end }}
      <pbcast.NAKACK2 use_mcast_xmit="false"
                      xmit_interval="200"
                      xmit_table_num_rows="50"
                      xmit_table_msgs_per_row="1024"
                      xmit_table_max_compaction_time="30000"
                      resend_last_seqno="true"
      />
      <UNICAST3 conn_close_timeout="5000"
                xmit_interval="200"
                xmit_table_num_rows="50"
                xmit_table_msgs_per_row="1024"
                xmit_table_max_compaction_time="30000"
      />
      <pbcast.STABLE desired_avg_gossip="5000"
                     max_bytes="1M"
      />
      {{ if .Values.cache.custom.secure.enabled }}
      <AUTH auth_class="org.jgroups.auth.MD5Token"
            auth_value="{{ .Values.cache.custom.secure.authSecret }}"
            token_hash="SHA"/>
      {{ end }}
      <pbcast.GMS print_local_addr="false"
                  join_timeout="${jgroups.join_timeout:2000}"
      />
      <UFC max_credits="4m"
           min_threshold="0.40"
      />
      <MFC max_credits="4m"
           min_threshold="0.40"
      />
      <FRAG3/>
    </stack>
  </jgroups>
  {{ end }}

  {{ if (eq .Values.cache.custom.discovery "DNS_PING") }}
  <jgroups>
    <stack name="custom-tcp">
      <TCP bind_addr="${jgroups.bind.address,jgroups.tcp.address:SITE_LOCAL}"
           bind_port="${jgroups.bind.port,jgroups.tcp.port:7800}"
           enable_diagnostics="false"
           thread_naming_pattern="pl"
           send_buf_size="640k"
           sock_conn_timeout="300"
           bundler_type="transfer-queue"
           logical_addr_cache_expiration="360000"
           port_range="0"

           thread_pool.min_threads="${jgroups.thread_pool.min_threads:0}"
           thread_pool.max_threads="${jgroups.thread_pool.max_threads:200}"
           thread_pool.keep_alive_time="60000"

           thread_dumps_threshold="${jgroups.thread_dumps_threshold:10000}"
      />
      <RED/>
      <dns.DNS_PING dns_query={{ include "keycloak.serviceDnsName" . | quote }}
                    num_discovery_runs="3"
      />
      <MERGE3 min_interval="10000"
              max_interval="30000"
      />
      <FD_SOCK/>
      <!-- Suspect node `timeout` millis after the last heartbeat -->
      <FD_ALL3 timeout="10000"
               interval="2000"
      />
      <VERIFY_SUSPECT timeout="1000"/>
      {{ if .Values.cache.custom.secure.enabled }}
      <!-- Adds a keystore from which nodes obtain secret keys. -->
      <!-- Uses the stack.combine and stack.position attributes to insert SYM_ENCRYPT into the default TCP stack after VERIFY_SUSPECT. -->
      <SYM_ENCRYPT
        provider="SunJCE"
        sym_algorithm="AES"
        keystore_name="{{ .Values.cache.custom.secure.keystorePath }}"
        store_password="{{ .Values.cache.custom.secure.keystorePassword }}"
        alias="jgroups"/>
      {{ end }}
      <pbcast.NAKACK2 use_mcast_xmit="false"
                      xmit_interval="200"
                      xmit_table_num_rows="50"
                      xmit_table_msgs_per_row="1024"
                      xmit_table_max_compaction_time="30000"
                      resend_last_seqno="true"
      />
      <UNICAST3 conn_close_timeout="5000"
                xmit_interval="200"
                xmit_table_num_rows="50"
                xmit_table_msgs_per_row="1024"
                xmit_table_max_compaction_time="30000"
      />
      <pbcast.STABLE desired_avg_gossip="5000"
                     max_bytes="1M"
      />
      {{ if .Values.cache.custom.secure.enabled }}
      <AUTH auth_class="org.jgroups.auth.MD5Token"
            auth_value="{{ .Values.cache.custom.secure.authSecret }}"
            token_hash="SHA"/>
      {{ end }}
      <pbcast.GMS print_local_addr="false"
                  join_timeout="${jgroups.join_timeout:2000}"
      />
      <UFC max_credits="4m"
           min_threshold="0.40"
      />
      <MFC max_credits="4m"
           min_threshold="0.40"
      />
      <FRAG3/>
    </stack>
  </jgroups>
  {{ end }}

  <cache-container name="keycloak">
    <transport lock-timeout="60000" stack="custom-tcp"/>
    <local-cache name="realms">
      <encoding>
        <key media-type="application/x-java-object"/>
        <value media-type="application/x-java-object"/>
      </encoding>
      <memory max-count="10000"/>
    </local-cache>
    <local-cache name="users">
      <encoding>
        <key media-type="application/x-java-object"/>
        <value media-type="application/x-java-object"/>
      </encoding>
      <memory max-count="10000"/>
    </local-cache>
    <distributed-cache name="sessions" owners="2">
      <expiration lifespan="-1"/>
    </distributed-cache>
    <distributed-cache name="authenticationSessions" owners="2">
      <expiration lifespan="-1"/>
    </distributed-cache>
    <distributed-cache name="offlineSessions" owners="2">
      <expiration lifespan="-1"/>
    </distributed-cache>
    <distributed-cache name="clientSessions" owners="2">
      <expiration lifespan="-1"/>
    </distributed-cache>
    <distributed-cache name="offlineClientSessions" owners="2">
      <expiration lifespan="-1"/>
    </distributed-cache>
    <distributed-cache name="loginFailures" owners="2">
      <expiration lifespan="-1"/>
    </distributed-cache>
    <local-cache name="authorization">
      <encoding>
        <key media-type="application/x-java-object"/>
        <value media-type="application/x-java-object"/>
      </encoding>
      <memory max-count="10000"/>
    </local-cache>
    <replicated-cache name="work">
      <expiration lifespan="-1"/>
    </replicated-cache>
    <local-cache name="keys">
      <encoding>
        <key media-type="application/x-java-object"/>
        <value media-type="application/x-java-object"/>
      </encoding>
      <expiration max-idle="3600000"/>
      <memory max-count="1000"/>
    </local-cache>
    <distributed-cache name="actionTokens" owners="2">
      <encoding>
        <key media-type="application/x-java-object"/>
        <value media-type="application/x-java-object"/>
      </encoding>
      <expiration max-idle="-1" lifespan="-1" interval="300000"/>
      <memory max-count="-1"/>
    </distributed-cache>
  </cache-container>
</infinispan>
